#include <sys/types.h>
#include <stdio.h>
#include <stdlib.h>
#include <signal.h>
#define __USE_POSIX
#include <semaphore.h>
#include <errno.h>

#include "locks.h"
#include "logs.h"

sem_t sem;
int init = 0;

void lock_init(void);
void lock_kill(void);


void
lock_init(void)
{
	if (init)
		return;
	init = 1;
	atexit(lock_kill);

	if (sem_init(&sem, 0, 0) < 0) {
		errf("sem_init");
		return;
	}
}


void
lock_kill(void)
{
	if (init != 1)
		return;
	sem_destroy(&sem);
	init = 0;
}


void
lock_wait(void)
{
	if (!init)
		lock_init();
	if (!init)
		return;
	while ((sem_wait(&sem) == -1) && (errno == EINTR))
		;
}


void
lock_unlock(void)
{
	if (!init)
		return;
	if (sem_post(&sem) == -1) {
		errf("sem_post\n");
		lock_kill();
	}
}
